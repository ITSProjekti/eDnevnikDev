@model IzmenaPredmetaViewModel
@{
    ViewBag.Title = "Izmeni predmet";
}

<h2 style="text-align:center">Izmena predmeta</h2>

<div class="container">
    <div class="row">
        <div class="col-md-8 col-md-offset-2">
            <!--<form class="form-horizontal">-->
            <div class="well">
                @using (Html.BeginForm("IzmeniPredmet", "Predmeti", FormMethod.Post, new { @class = "form-horizontal", @id="forma" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(p=>p.PredmetId)
                    <br />
                    <br />
                    <fieldset>
                        <div class="form-group">
                            @Html.LabelFor(p => p.TipOcenePredmetaId, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                <select  name="TipOcenePredmetaId" class="form-control">
                                    @foreach (var tip in Model.TipoviOcenaPredmeta)
                                    {
                                        if (tip.TipOcenePredmetaId == Model.TipOcenePredmetaId)
                                        {
                                            <option selected="selected" value="@tip.TipOcenePredmetaId">@tip.Tip</option>
                                        }
                                        else
                                        {
                                            <option value="@tip.TipOcenePredmetaId">@tip.Tip</option>

                                        }
                                    }
                                </select>
                            </div>
                            </div>
                        <div class="form-group">
                            @Html.LabelFor(p => p.NazivPredmeta, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(p => p.NazivPredmeta, new { @class = "form-control", placeholder = "Unesite naziv" })
                                @Html.ValidationMessageFor(p => p.NazivPredmeta, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-11">
                                <center>
                                    <button type="submit" class="btn btn-success">Sačuvaj</button>
                                    <button type="button" class="btn btn-danger" onclick="ResetForme()">Poništi</button>
                                </center>
                            </div>
                        </div>
                    </fieldset>
                    <br />
                }
            </div>
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Vrati se na listu predmeta", "Index", null, new { @class = "btn btn-info" })
</div>
<!--       </form> -->
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(function(){

            var greska=false;
            greska=@Html.Raw(Json.Encode(Model.Greska));

            if(greska)
            {
                swal({
                    confirmButtonColor: '#d9534f',
                    type: 'error',
                    title: 'Ups!',
                    text: 'Došlo je do greške!'
                });
            }
        })


        function ResetForme() {

            $("#forma")[0].reset();
            $(".text-danger").html('');
        }

</script>
}