@model ProfesorViewModel
@{
    ViewBag.Title = "Dodaj profesora";
}
    <div class="row">
            <!--<form class="form-horizontal">-->
                @using (Html.BeginForm("Sacuvaj", "Profesori", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" , id="formId"}))
                {
                    @Html.AntiForgeryToken()
                    <div class="col-md-7 col-sm-7 col-md-offset-2 ">
                        <h2 style="text-align:center">Novi profesor</h2>
                        <br>

                        <div class="well">
                            <fieldset>
                                <br>
                                <div class="form-group">
                                    <div class="col-md-11">
                                        <center>
                                            <img id="fotografijaProfesora" class="img-responsive" src="~/ProfilneSlike/user-default.png" style="width:194px; height:240px;" />
                                        </center>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("Fotografija", new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        <label class="btn-bs-file btn btn-info" style="width:280px;">
                                            Dodaj fotografiju
                                            <input accept="image/*" type="file" name="upload" id="fotografijaProfesora" onchange="readURL(this);" />
                                        </label>
                                    </div>
                                </div>
                                    <div class="form-group">
                                        @Html.LabelFor(p => p.Profesor.Ime, new { @class = "col-md-3 control-label" })
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(p => p.Profesor.Ime, new { @class = "form-control", placeholder = " Unesite ime" })
                                            @Html.ValidationMessageFor(p => p.Profesor.Ime, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        @Html.LabelFor(p => p.Profesor.Prezime, new { @class = "col-md-3 control-label" })
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(p => p.Profesor.Prezime, new { @class = "form-control", placeholder = "Unesite prezime" })
                                            @Html.ValidationMessageFor(p => p.Profesor.Prezime, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        @Html.LabelFor(p => p.Profesor.Pol, new { @class = "col-md-3 control-label" })
                                        <div class="col-md-9">
                                            @Html.DropDownListFor(p => p.Profesor.PolId, new SelectList(Model.Polovi, "PolId", "Naziv"), "Izaberite pol", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(p => p.Profesor.PolId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        @Html.LabelFor(p => p.Profesor.Adresa, new { @class = "col-md-3 control-label" })
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(p => p.Profesor.Adresa, new { @class = "form-control", placeholder = "Unesite adresu" })
                                            @Html.ValidationMessageFor(p => p.Profesor.Adresa, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(p => p.Profesor.Telefon, new { @class = "col-md-3 control-label" })
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(p => p.Profesor.Telefon, new { @class = "form-control", placeholder = "(+381-__/_______)" })
                                            @Html.ValidationMessageFor(p => p.Profesor.Telefon, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(p => p.Profesor.Zvanje, new { @class = "col-md-3 control-label" })
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(p => p.Profesor.Zvanje, new { @class = "form-control", placeholder = "Unesite zvanje" })
                                            @Html.ValidationMessageFor(p => p.Profesor.Zvanje, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                <div class="form-group">
                                    @Html.LabelFor(p => p.PredmetiIDs, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.ListBoxFor(p => p.PredmetiIDs, new SelectList(Model.Predmeti, "PredmetID", "NazivPredmeta"), new { @class = "list-group" })
                                        <br />
                                        @Html.ValidationMessageFor(p => p.PredmetiIDs, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                    <div class="form-group">
                                        @Html.LabelFor(p => p.Profesor.Licenca, new { @class = "col-md-3 control-label" })
                                        <div class="col-md-9">
                                            @Html.CheckBoxFor(p => p.Profesor.Licenca, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(p => p.Profesor.Licenca, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(p => p.Profesor.RazredniStaresina, new { @class = "col-md-3 control-label" })
                                        <div class="col-md-9">
                                            @Html.CheckBoxFor(p => p.Profesor.RazredniStaresina, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(p => p.Profesor.RazredniStaresina, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(p => p.Profesor.Vanredan, new { @class = "col-md-3 control-label" })
                                        <div class="col-md-9">
                                            @Html.CheckBoxFor(p => p.Profesor.Vanredan, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(p => p.Profesor.Vanredan, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                <div class="form-group">
                                    <div class="col-md-10 col-md-offset-4 col-sm-offset-2 col-xs-offset-2">
                                        <button type="submit" class="btn btn-success">Sačuvaj</button>
                                         <button type="reset" class="btn btn-danger" onclick="ResetValidacije()">Poništi</button>
                                    </div>
                                </div>

                            </fieldset>
                        </div>
                    </div>
                }
    </div>
<!--       </form> -->
<div>
    @Html.ActionLink("Vrati se na listu profesora", "Index", null, new { @class = "btn btn-info" })
</div>


@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $("#PredmetiIDs").select2({
            placeholder: "Izaberite predmete"
        });

        // Sklanja se default vrednost u comboboxu za izbor pola
        $(document).ready(function () {

            $("#Profesor_PolId option").first().prop("hidden", true);

            var greska = false;
            greska=@Html.Raw(Json.Encode(Model.Greska));

            if(greska)
            {
                swal({
                    confirmButtonColor: '#d9534f',
                    type: 'error',
                    title: 'Ups!',
                    text: 'Došlo je do greške!'
                });
            }

        });

        
        //funkcija koja sluzi da se slika odmah ucita nakon sto se izabere na choose file
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#fotografijaProfesora')
                        .attr('src', e.target.result)
                        .width(194)
                        .height(240);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }

        // Funckija on click ponisti za reset forme i validacije
        function ResetValidacije() {

            $("#formId")[0].reset();
            $(".text-danger").html("");
            $("#fotografijaProfesora").attr("src", "/ProfilneSlike/user-default.png");

            ResetListeIzabranihPredmeta();
        }

        // Funkcija ponisti za listu predmeta
        function ResetListeIzabranihPredmeta() {
            
            // Pokupi iz select-a sve predmete i smesti u niz
            var predmeti = [];

            $.each($("#PredmetiIDs option"), function () {

                var predmet = {
                    id: $(this).val(),
                    naziv: $(this).text()
                };

                predmeti.push(predmet);
            });

            // Ponisti sve sto je selectovano
            $('#PredmetiIDs')
            .find('option')
            .remove()
            .end();
            // Napuni ponovo sleect svim predmetima
            for (var i = 0; i < predmeti.length; i++) {
                $('#PredmetiIDs').append('<option value="' + predmeti[i].id + '">' + predmeti[i].naziv + '</option>');
            }
        }

        

        
    </script>


}



