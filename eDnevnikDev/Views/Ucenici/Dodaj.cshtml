@model UcenikViewModel
@{

    ViewBag.Title = "Dodaj učenika";
    var smerovi = new SelectList(Model.Smerovi, "SmerID", "NazivSmera", "Trajanje", 0);
    var polovi = new SelectList(Model.Polovi, "PolId", "Naziv");
}

<div class="row">

    @using (Html.BeginForm("Sacuvaj", "Ucenici", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data", id = "formId" }))
    {
        @Html.AntiForgeryToken()

        <div class="col-md-7 col-sm-7 col-md-offset-2 ">
            <h2 style="text-align:center">Novi učenik</h2>
            <br>

            <div class="well">

                <fieldset>
                    <br>
                    <div class="form-group">
                        <div class="col-md-11">
                            <center>
                                <img id="fotografijaUcenika" class="img-responsive" src="~/ProfilneSlike/user-default.png" style="width:194px; height:240px;" />
                            </center>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Fotografija", new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            <label class="btn-bs-file btn btn-info" style="width:280px;">
                                Dodaj fotografiju
                                <input accept="image/*" type="file" name="upload" id="fotografijaUcenika" onchange="readURL(this);" />
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(u => u.Ucenik.Ime, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(u => u.Ucenik.Ime, new { @class = "form-control", placeholder = "Unesite ime" })
                            @Html.ValidationMessageFor(u => u.Ucenik.Ime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(u => u.Ucenik.Prezime, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(u => u.Ucenik.Prezime, new { @class = "form-control", placeholder = "Unesite prezime" })
                            @Html.ValidationMessageFor(u => u.Ucenik.Prezime, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(u => u.Ucenik.Pol, new { @class = "col-md-3 control-label" })

                        <div class="col-md-9">
                            @Html.DropDownListFor(u => u.Ucenik.PolId, polovi, "Izaberite pol", new { @class = "form-control" })
                            @Html.ValidationMessageFor(u => u.Ucenik.PolId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(u => u.Ucenik.DatumRodjenja, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @{
                                string datumRodjenja = "";

                                if (Model.Ucenik != null)
                                {
                                    datumRodjenja = Model.Ucenik.DatumRodjenja.ToString("dd.MM.yyyy");
                                }
                            }
                            <input type="text" id="datum" value="@datumRodjenja" class="form-control" name="datum" placeholder="Unesite datum rođenja" data-val="true" data-val-required="Polje za datum rođenja je obavezno" readonly>
                            <input type="hidden" value="@datumRodjenja" name="Ucenik.DatumRodjenja" id="Ucenik_DatumRodjenja">
                            <span class="field-validation-valid text-danger" data-valmsg-for="datum" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(u => u.Ucenik.MestoRodjenja, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(u => u.Ucenik.MestoRodjenjaId, new SelectList(Model.Gradovi, "Id", "Naziv"), "Izaberite grad", new { @class = "form-control" })
                            @Html.ValidationMessageFor(u => u.Ucenik.MestoRodjenjaId, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(u => u.Ucenik.JMBG, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(u => u.Ucenik.JMBG, new { @class = "form-control", placeholder = "Unesite JMBG", maxlength = "13" })
                            @Html.ValidationMessageFor(u => u.Ucenik.JMBG, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(u => u.Ucenik.Adresa, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(u => u.Ucenik.Adresa, new { @class = "form-control", placeholder = "Unesite adresu" })
                            @Html.ValidationMessageFor(u => u.Ucenik.Adresa, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(u => u.Ucenik.MestoPrebivalista, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(u => u.Ucenik.MestoPrebivalista, new { @class = "form-control", placeholder = "Unesite mesto prebivališta" })
                            @Html.ValidationMessageFor(u => u.Ucenik.MestoPrebivalista, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(u => u.Ucenik.ImeOca, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(u => u.Ucenik.ImeOca, new { @class = "form-control", placeholder = "Unesite ime oca/staratelja" })
                            @Html.ValidationMessageFor(u => u.Ucenik.ImeOca, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(u => u.Ucenik.PrezimeOca, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(u => u.Ucenik.PrezimeOca, new { @class = "form-control", placeholder = "Unesite prezime oca/staratelja" })
                            @Html.ValidationMessageFor(u => u.Ucenik.PrezimeOca, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(u => u.Ucenik.ImeMajke, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(u => u.Ucenik.ImeMajke, new { @class = "form-control", placeholder = "Unesite ime majke/staratelja" })
                            @Html.ValidationMessageFor(u => u.Ucenik.ImeMajke, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(u => u.Ucenik.PrezimeMajke, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(u => u.Ucenik.PrezimeMajke, new { @class = "form-control", placeholder = "Unesite prezime majke/staratelja" })
                            @Html.ValidationMessageFor(u => u.Ucenik.PrezimeMajke, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(u => u.Ucenik.BrojTelefonaRoditelja, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(u => u.Ucenik.BrojTelefonaRoditelja, new { @class = "form-control", placeholder = "(+381-__/_______)" })
                            @Html.ValidationMessageFor(u => u.Ucenik.BrojTelefonaRoditelja, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">

                        @Html.LabelFor(u => u.Ucenik.Vanredan, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.CheckBoxFor(u => u.Ucenik.Vanredan, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(u => u.Ucenik.Smer, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(u => u.Ucenik.SmerID, smerovi, "Izaberite smer", new { @class = "form-control" })
                            @Html.ValidationMessageFor(u => u.Ucenik.SmerID, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-10 col-md-offset-4 col-sm-offset-2 col-xs-offset-2">
                            <button type="submit" class="btn btn-success">Sačuvaj</button>
                            <button type="reset" class="btn btn-danger" onclick="ResetValidacije();">Poništi</button>
                        </div>
                    </div>
                </fieldset>

            </div>
        </div>
                                }
</div>
<div>
    @Html.ActionLink("Vrati se na listu učenika", "Index", null, new { @class = "btn btn-info" })
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/moment.js"></script>
    <!-- Ucitavanje slike pri odabiru iste preko FileDialoga -->
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#fotografijaUcenika')
                        .attr('src', e.target.result)
                        .width(194)
                        .height(240);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
    <script>

        $(function () {

            var greska = false;
            greska=@Html.Raw(Json.Encode(Model.Greska));

            if(greska)
            {
                swal({
                    confirmButtonColor: '#d9534f',
                    type: 'error',
                    title: 'Ups!',
                    text: 'Došlo je do greške!'
                });
            }
        });


        $(function () {
            $("#datum").css('cursor', 'pointer');
            $("#datum").css('background-color', '#ffffff');
        });

        var recnik = {
            1: "Prvi",
            2: "Drugi",
            3: "Treći",
            4: "Četvrti"
        }

        // Dodeljuje se ime za optgroupu u comboboxu za izbor smera
        // Uklanja se default vrednost u comboboxovima
        $(document).ready(function () {
            $("#Ucenik_SmerID optgroup[label=4]").prop({ label: "Četvorogodišnji smerovi" });
            $("#Ucenik_SmerID optgroup[label=3]").prop({ label: "Trogodišnji smerovi" });

            $("#Ucenik_MestoRodjenjaId option").first().prop("hidden", true);
            $("#Ucenik_PolId option").first().prop("hidden", true);
            $("#Ucenik_SmerID option").first().prop("hidden", true);
        });


        $("#datum").datepicker({
            constrainInput: true,
            dateFormat: "dd.mm.yy.",
            dayNamesMin: ["Ned", "Pon", "Uto", "Sre", "Cet", "Pet", "Sub"],
            monthNamesShort: ["Jan", "Feb", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Sept", "Okt", "Nov", "Dec"],
            altField: "#Ucenik_DatumRodjenja",
            altFormat: "yy-mm-dd",
            changeMonth: true,
            changeYear: true,
            yearRange: "1970:"
        });

        $("#datum").change(function () {
            $(this).blur();
        });

        function ResetValidacije() {

            $("#formId")[0].reset();
            $(".text-danger").html('');
            $("#fotografijaUcenika").attr("src", "/ProfilneSlike/user-default.png");
        }

        //$("form").submit(function (e) {
        //    if ($("#File").val() == "")
        //        return;

        //    var ext = $("#File").val().split(".").pop().toLowerCase();

        //    if ($.inArray(ext, ['png', 'jpg', 'jpeg']) == -1) {
        //        e.preventDefault();
        //        $("[data-valmsg-for='File']").text("Slika koju ste izabrali nije ispravna");
        //    }
        //});

        //$("#File").change(function () {
        //    var ext = $("#File").val().split(".").pop().toLowerCase();

        //    if ($.inArray(ext, ['png', 'jpg', 'jpeg']) == -1) {
        //        $("[data-valmsg-for='File']").text("Slika koju ste izabrali nije ispravna");
        //    }
        //    else {
        //        $("[data-valmsg-for='File']").text("");
        //    }
        //});

        @*$("#datum").val(moment("@Model.Ucenik.DatumRodjenja.ToString()").format("DD.MM.YYYY."));

        $(function () {
            var datum = $("#datum").val();
            $("#Ucenik_DatumRodjenja").val(moment(datum).format("YYYY-MM-DD"));
        });*@

        //function PostojiKreirano() {
        //    var razred = $("#Ucenik_Razred").val();
        //    var odeljenje = $("#Oznaka").val();

        //    var zahtev = $.getJSON("/Ucenici/DaLiPostojiKreirano?razred=" + razred + "&oznaka=" + odeljenje);

        //    zahtev.done(function (podaci) {
        //        if (podaci.Kreirano) {
        //            if ($("#SmestiUNovoOdeljenje option[value='3']").length == 0)
        //                $("#SmestiUNovoOdeljenje").append("<option value='3'>Kreirano</option>");
        //        }
        //        else {
        //            $("#SmestiUNovoOdeljenje option[value='3']").remove();
        //        }
        //    });

        //    zahtev.fail(function (gr) { $("#p1").html(gr.statusText); });

        //}

    </script>

}



