@model CasUceniciViewModel
@using System.Globalization
@{
    ViewBag.Title = "Cas";

}

@if (Model.Cas == null || Model.Predmet == null || Model.listaOcena == null || Model.Ucenici == null)
{
    <div class="row">
        <div class="col-md-12">
            <h3 class="text-danger text-center">Došlo je do neočekivane greške, molimo Vas pokušajte kasnije!</h3>
        </div>
    </div>
}
else
{
    <h2>Evidencija</h2>

    <div class="row">
        <div class="col-md-8">
            <h3>Datum: @DateTime.Now.ToString("dddd dd.MM.yyy", CultureInfo.CreateSpecificCulture("sr-Latn-CS"))</h3>
        </div>
        <div class="col-md-8">
            <h4>
                Redni broj časa: @if (Model.Cas != null)
                { @Model.Cas.RedniBrojCasa;
                }
            </h4>
        </div>
        <div class="col-md-8">
            @{
                if (Model.Cas != null)
                {
                    switch (Model.Cas.Odeljenje.Razred)
                    {
                        case 1: <h4>Odeljenje: I-@Model.Cas.Odeljenje.OznakaID</h4>;
                            break;
                        case 2: <h4>Odeljenje: II-@Model.Cas.Odeljenje.OznakaID</h4>;
                            break;
                        case 3: <h4>Odeljenje: III-@Model.Cas.Odeljenje.OznakaID</h4>;
                            break;
                        case 4: <h4>Odeljenje: IV-@Model.Cas.Odeljenje.OznakaID</h4>;
                            break;
                        default: <h4>Odeljenje ne postoji</h4>;
                            break;
                    }
                }
            }
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    @if (Model.Ucenici != null)
                    {
                        foreach (var ucenik in Model.Ucenici)
                        {
                            <div class="col-md-3">
                                @{
                                    string karticaId = ucenik.UcenikID + "div";
                                }
                                <div class="evidencijaKartica" id="@karticaId">
                                    <div id="circle">
                                        @{
                                            string fotografija;

                                            if (ucenik.Fotografija != null)
                                            {
                                                fotografija = "/slike/" + ucenik.Fotografija;

                                            }
                                            else
                                            {
                                                fotografija = "http://via.placeholder.com/140x140";

                                            }

                                        }
                                        <img src="@fotografija" alt="evidencijaucenik" height="240" width="185" id="img_pregled" />
                                    </div>
                                    <div class="container_pregled_ucenika">
                                        <h4>@ucenik.Ime @ucenik.Prezime</h4>
                                        <p class="evidencijatitle">@ucenik.BrojUDnevniku</p>
                                        <div id="pbutton">
                                            @{
                                                string buttonId = ucenik.UcenikID + "button";
                                                string glyphId = ucenik.UcenikID + "glyph";

                                            }

                                            <a id="@buttonId" class="evidencijabutton" value="@ucenik.UcenikID" onclick="klik(@ucenik.UcenikID)">
                                                <span id="@glyphId" class="glyphicon glyphicon-ok"></span>
                                            </a>
                                        </div>
                                        <div id="buttonPopUpNapomena">
                                            <a class="evidencijabutton" onclick="PrikaziNapomenu(@ucenik.UcenikID)">
                                                <span id="glyph" class="glyphicon glyphicon-book"></span>
                                            </a>
                                        </div>

                                        <div>
                                            <a class="evidencijabutton" onclick="prikaziOcenePopUp(@ucenik.UcenikID)">
                                                <span id="glyph" class="glyphicon glyphicon-book"></span>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @Scripts.Render("~/bundles/jquery")
                                                if (!ucenik.Prisutan)
                                                {
                                                    <script>
                                                        (function () {
                                                            $('#' + @ucenik.UcenikID + 'div').toggleClass("borderevidencijacolor");
                                                            $("#" + @ucenik.UcenikID + 'button').toggleClass("buttonevidencijacolor");
                                                            $('#' + @ucenik.UcenikID + 'glyph').toggleClass('glyphicon-ok glyphicon-remove');
                                                            var element = document.getElementById("primarni");
                                                        })();
                                                    </script>

                                                        }
                                                    }
                                                }


                </div>

                @if (Model.Predmet != null)
                {
                    <div id="myModal" class="modal fade" role="dialog">
                        <div class="modal-dialog modal-lg">
                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">Ocene</h4>
                                </div>
                                <div class="modal-body">
                                    <div>
                                        @* POCETAK BODY *@
                                        <div class="container">
                                            <div class="panel-group">
                                                <div class="panel panel-default">
                                                    <div class="panel-heading">
                                                        <h4 class="panel-title">
                                                            <a class="collapsed" data-toggle="collapse" href="#@Model.Predmet.PredmetID">@Model.Predmet.NazivPredmeta</a>
                                                        </h4>
                                                    </div>
                                                    <div id="@Model.Predmet.PredmetID" class="panel-collapse collapse">
                                                        <div class="panel-body">
                                                            <div>
                                                                @* POCETAK BODY *@

                                                                @if (Model.Cas.Polugodiste == 1 || Model.Cas.Polugodiste == 2)
                                                                {
                                                                    <div class="container" style="align-content:center;max-height:100%;max-width:100%;margin-top:0px;">
                                                                        <div class="row">
                                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding:0px;">
                                                                                <h4 style="text-align:center;margin-bottom:3px;"><strong>I polugodište</strong></h4>
                                                                                <hr />
                                                                                @if (Model.Cas.Polugodiste == 1)
                                                                                {
                                                                                    <button type="button" class="btn btn-info" style="width:100%;margin:2px;font-size:200%;" onclick='UnosOcenePopUp("@Model.Predmet.TipOcenePredmeta",@Model.Cas.CasId)'>+</button>

                                                                                }
                                                                                <hr style="margin-top:3px;margin-bottom:3px;" />
                                                                            </div>
                                                                        </div>
                                                                        <div class="row">
                                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding:0px;">
                                                                                <div style="display: flex;">
                                                                                    <div id="oceneIPolugodiste" style="flex: 10;">
                                                                                    </div>
                                                                                    <div id="zakljucnaOcenaIPolugodiste" style="flex: 2;position: relative;">
                                                                                    </div>
                                                                                </div>

                                                                                <div class="row">
                                                                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding:0px;">
                                                                                        <hr style="margin-top:3px;margin-bottom:3px;" />
                                                                                    </div>
                                                                                </div>

                                                                                <div class="row">
                                                                                    <div class="row-fluid">
                                                                                        <div id="plusMinusIPolugodiste" class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding:0px;">
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                                <div class="row">
                                                                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding:0px;">

                                                                                        <hr style="margin-top:3px;margin-bottom:3px;" />
                                                                                    </div>
                                                                                </div>
                                                                            </div>


                                                                        </div>
                                                                    </div>
                                                                }


                                                                @*  POLOVINA  *@

                                                                @if (Model.Cas.Polugodiste == 2)
                                                                {
                                                                    <div class="container" style="align-content:center;max-height:100%;max-width:100%;margin-top:0px;">
                                                                        <div class="row">
                                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding:0px;">
                                                                                <h4 style="text-align:center;margin-bottom:3px;"><strong>II polugodište</strong></h4>
                                                                                <hr />
                                                                                @if (Model.Cas.Polugodiste == 2)
                                                                                {
                                                                                    <button type="button" class="btn btn-info" style="width:100%;margin:2px;font-size:200%;" onclick='UnosOcenePopUp("@Model.Predmet.TipOcenePredmeta",@Model.Cas.CasId)'>+</button>
                                                                                }
                                                                                <hr style="margin-top:3px;margin-bottom:3px;" />
                                                                            </div>
                                                                        </div>
                                                                        <div class="row">
                                                                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding:0px;">
                                                                                <div style="display: flex;">
                                                                                    <div id="oceneIIPolugodiste" style="flex: 10;">
                                                                                    </div>
                                                                                    <div id="zakljucnaOcenaIIPolugodiste" style="flex: 2;position: relative;">
                                                                                    </div>
                                                                                </div>
                                                                                <div class="row">
                                                                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding:0px;">
                                                                                        <hr style="margin-top:3px;margin-bottom:3px;" />
                                                                                    </div>
                                                                                </div>

                                                                                <div class="row">
                                                                                    <div class="row-fluid">
                                                                                        <div id="plusMinusIIPolugodiste" class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding:0px;">
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                                <div class="row">
                                                                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding:0px;">

                                                                                        <hr style="margin-top:3px;margin-bottom:3px;" />
                                                                                    </div>
                                                                                </div>
                                                                            </div>


                                                                        </div>
                                                                    </div>
                                                                }


                                                                @* KRAJ BODY *@
                                                            </div>

                                                        </div>
                                                        <div class="panel-footer"></div>
                                                    </div>

                                                </div>
                                            </div>


                                        </div>


                                        @* KRAJ BODY *@
                                    </div>
                                </div>

                                <div class="modal-footer">
                                    <button type="button" class="btn btn-danger" data-dismiss="modal">Zatvori</button>
                                </div>
                            </div>

                        </div>
                    </div>
                <!-- Modal END -->
                }

                <!-- Unos ocene -->
                <div id="unosOceneModal" class="modal fade" role="dialog">
                    <div class="modal-dialog modal-lg">

                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" onclick="prikaziOcene()">&times;</button>
                                <h4 class="modal-title">Unos ocene</h4>
                            </div>
                            <div class="modal-body">
                                <div>
                                    <div class="container">
                                        <form id="__AjaxAntiForgeryFormUnosOcene">
                                            @Html.AntiForgeryToken()
                                            <div class="col-md-12" id="UnosOceneDiv">
                                            </div>
                                            <div class="col-md-12">
                                                <div class="col-md-8"></div>
                                                <div class="col-md-4">
                                                    <br>
                                                    <br>
                                                    <input type="button" class="btn btn-success" value="Unesi ocenu" onclick="UnosOcene()" />
                                                    <br>
                                                    <br>
                                                </div>
                                                <br>
                                                <br>
                                                <br>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="prikaziOcene()">Zatvori</button>
                            </div>
                        </div>

                    </div>
                </div>

                <!-- Modal za napomenu -->
                <div class="modal fade" id="napomenaModal" role="dialog">
                    <div class="modal-dialog">

                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Unos napomene</h4>
                            </div>
                            <div class="modal-body">
                                <form id="__AjaxAntiForgeryFormUnosNapomene">
                                    @Html.AntiForgeryToken()
                                    <textarea id="tekstNapomene" class="form-control" cols="100" rows="5"></textarea>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" onclick="SacuvajNapomenu()" class="btn btn-success" data-dismiss="modal">Sačuvaj</button>
                                <button type="button" class="btn btn-danger" data-dismiss="modal">Zatvori</button>
                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </div>
    </div>
    @section Scripts
            {

        <script>

            function Odeljenja() {
                var razred = $("#razred").val();
                var zahtev = $.getJSON("/Odeljenje/OdeljenjeTrajanje?godina=" + razred);


                zahtev.done(function (odeljenja) {

                    for (var odeljenje in odeljenja) {
                        $("#odeljenja").append("<option value='" + odeljenja[odeljenje].Oznaka + "'>" + odeljenja[odeljenje].Oznaka + "</option>");
                    }
                });
                zahtev.fail(function (gr) { $("#p1").html(gr.statusText); });
            }



            function klik() {
                $('.evidencijaKartica').toggleClass("borderevidencijacolor");
                $('#evidencijabutton').toggleClass("buttonevidencijacolor");
                $('#glyph').toggleClass('glyphicon-ok glyphicon-remove');
            }



            //**Aca pocetak**//

            //Metoda  ponistava ocene koje su postavljene u modalnoj formi
            function PonistiOcene() {
                $("#zakljucnaOcenaIPolugodiste").html("");
                $("#oceneIPolugodiste").html("");
                $("#plusMinusIPolugodiste").html("");
                $("#zakljucnaOcenaIIPolugodiste").html("");
                $("#oceneIIPolugodiste").html("");
                $("#plusMinusIIPolugodiste").html("");

            }

            //Globalna promenljiva za skladistenje svih ocena
            var sveOcene = [];

            $(function () {
                sveOcene=@Html.Raw(Json.Encode(Model.listaOcena));
                VratiTipBrojcaneOcene();
                VratiTipOpisneOcene();
            });

            //Globalna promenljiva za cuvanje Id-a od ucenika
            var ID = 0;

            //Metoda  aktivira modalnu formu sa ocenema
            function prikaziOcenePopUp(ucenikId) {

                PonistiOcene();
                ID = ucenikId;
                $("#myModal").modal();

                var ocene = [];// niz ocena za ucenika
                var brojac = 0;
                for (var k = 0; k < sveOcene.length; k++) {
                    if (sveOcene[k].UcenikId == ucenikId) //iz niza ocena se uzimaju samo ocene za izabranog ucenika
                    {
                        ocene[brojac] = sveOcene[k];
                        brojac++;
                    }
                }

                //Prolazak kroz niz ocena koje pripadaju izabranom učeniku i
                //raspoređivanje ocena prema polugodištu (I i II), tipu predmeta (Brojčani i Opisni) i
                //prema tipu ocene (Kontrolni, Pismeni, Usmeni, Zaključna, Domaći)
                for (var j = 0; j < ocene.length; j++) {
                    if (ocene[j].Polugodiste == 1) //I polugodište
                    {
                        if (ocene[j].TipOcenePredmeta == "Brojcana") {
                            if (ocene[j].TipOcene == "Zakljucna") {

                                $("#zakljucnaOcenaIPolugodiste").append("<button type='button' class='btn btn-secondary' style='width:100%;margin:2px;font-size:200%;color:red;position: absolute;bottom: 0;'>" + ocene[j].Ocena + "</button>")
                            }
                            else {
                                if (ocene[j].Ocena != null && ocene[j].Plus == null) {

                                    $("#oceneIPolugodiste").append("<button type='button' class='btn btn-secondary' style='margin:2px;width:53px;height:53px;font-size:200%'>" + ocene[j].Ocena + "</button>")

                                }
                                else if (ocene[j].Plus != null && ocene[j].Ocena == null) {
                                    if (ocene[j].Plus == true) {
                                        $("#plusMinusIPolugodiste").append("<button type='button'class='btn btn-success' style='margin:2px;height:35px;width:35px;'>+</button>")

                                    }
                                    else if (ocene[j].Plus == false) {
                                        $("#plusMinusIPolugodiste").append("<button type='button'class='btn btn-danger' style='margin:2px;height:35px;width:35px;'>-</button>")

                                    }
                                }

                            }
                        }
                        else if (ocene[j].TipOcenePredmeta == "Opisna" && ocene[j].TipOcene == "Zakljucna") {
                            $("#oceneIPolugodiste").append("<h2 class='text-center text-danger' style='margin-left:100px;'>"+ocene[j].TipOpisneOcene+"</h2>");

                        }
                    }
                    else if (ocene[j].Polugodiste == 2) //II polugodište
                    {
                        if (ocene[j].TipOcenePredmeta == "Brojcana") {
                            if (ocene[j].TipOcene == "Zakljucna") {

                                $("#zakljucnaOcenaIIPolugodiste").append("<button type='button' class='btn btn-secondary' style='width:100%;margin:2px;font-size:200%;color:red;position: absolute;bottom: 0;'>" + ocene[j].Ocena + "</button>")
                            }
                            else {
                                if (ocene[j].Ocena != null && ocene[j].Plus == null) {

                                    $("#oceneIIPolugodiste").append("<button type='button' class='btn btn-secondary' style='margin:2px;width:53px;height:53px;font-size:200%'>" + ocene[j].Ocena + "</button>")

                                }
                                else if (ocene[j].Plus != null && ocene[j].Ocena == null) {
                                    if (ocene[j].Plus == true) {
                                        $("#plusMinusIIPolugodiste").append("<button type='button'class='btn btn-success' style='margin:2px;height:35px;width:35px;'>+</button>")

                                    }
                                    else if (ocene[j].Plus == false) {
                                        $("#plusMinusIIPolugodiste").append("<button type='button'class='btn btn-danger' style='margin:2px;height:35px;width:35px;'>-</button>")

                                    }
                                }

                            }
                        }
                        else if (ocene[j].TipOcenePredmeta == "Opisna" && ocene[j].TipOcene == "Zakljucna") {
                            $("#oceneIIPolugodiste").append("<h2 class='text-center text-danger' style='margin-left:100px;'>"+ocene[j].TipOpisneOcene+"</h2>");
                        }
                    }
                }
            }

            //Globalna promenljiva za čuvanje tipova brojčanih ocena
            var TipBrojcaneOcene = [];

            //Metoda vraca tipove brojcane ocene
            function VratiTipBrojcaneOcene()
            {
                $.ajax({
                    type: "POST",
                    url: "/Casovi/VratiTipOcene",
                    contentType: "application/json",
                    datatype: "json",
                    success:
                            function (tipOcene) {
                                TipBrojcaneOcene=tipOcene;

                            }
                });
            }


            //Globalna promenljiva za čuvanje tipova brojčanih ocena
            var TipOpisneOcene = [];

            //Metoda vraca tipove opisne ocene
            function VratiTipOpisneOcene()
            {
                $.ajax({
                    type: "POST",
                    url: "/Casovi/VratiTipOpisneOcene",
                    contentType: "application/json",
                    datatype: "json",
                    success:
                            function (tipOpisneOcene) {
                                TipOpisneOcene=tipOpisneOcene;
                            }
                });
            }



            //Globalne promenljiva za cuvanje Id-a od casa
            var cas;
            //Globalne promenljiva za cuvanje ocene
            var ocena;

            //Metoda aktivira modalnu formu za unos ocene (Brojčana i Opisna)
            function UnosOcenePopUp(tipOcenePredmeta, casId) {

                $('#myModal').modal('hide');
                $("#unosOceneModal").modal();
                $("#UnosOceneDiv").html("");

                ocena = tipOcenePredmeta;
                cas = casId;


                if (tipOcenePredmeta == "Brojcana") {

                    var htmlUnosOceneDiv="";

                    htmlUnosOceneDiv="<div class='col-md-4'>";
                    htmlUnosOceneDiv += "<select class='form-control' id='TipOcene' onchange='PopuniOcene()'>";
                    htmlUnosOceneDiv += "<option value='0'>Izaberite</option>";

                    for (var i = 0; i < TipBrojcaneOcene.length; i++) {
                        htmlUnosOceneDiv+="<option value=" + TipBrojcaneOcene[i].TipOceneId + ">" + TipBrojcaneOcene[i].Tip + "</option>";
                    }

                    htmlUnosOceneDiv+="</select>";
                    htmlUnosOceneDiv+=" <span class='field-validation-valid text-danger' id='tipOceneGreska'></span>";
                    htmlUnosOceneDiv+="</div>";
                    htmlUnosOceneDiv+="<div class='col-md-4' id='divOcene'>";
                    htmlUnosOceneDiv+="<select class='form-control' disabled='disabled' id='Ocena'></select>";
                    htmlUnosOceneDiv+="</div>";
                    htmlUnosOceneDiv+="<div class='col-md-4'>";
                    htmlUnosOceneDiv+="<textarea id='OpisOcene' class='form-control'></textarea>";
                    htmlUnosOceneDiv += "</div>";

                    $("#UnosOceneDiv").append(htmlUnosOceneDiv);
                    $("#TipOcene option").first().prop("hidden", true);


                }
                else if (tipOcenePredmeta == "Opisna") {

                    var htmlUnosOceneDiv = "";

                    htmlUnosOceneDiv = "<div class='col-md-4'>";
                    htmlUnosOceneDiv += "<select class='form-control' id='TipOpisneOcene' onchange='ProveraOpisneOcene()'>";
                    htmlUnosOceneDiv += "<option value='0'>Izaberite</option>";

                    for (var i = 0; i < TipOpisneOcene.length; i++) {
                        htmlUnosOceneDiv += "<option value=" + TipOpisneOcene[i].TipOpisneOceneId + ">" + TipOpisneOcene[i].Tip + "</option>";
                    }

                    htmlUnosOceneDiv += "</select>";
                    htmlUnosOceneDiv +=" <span class='field-validation-valid text-danger' id='tipOpisneOceneGreska'></span>";
                    htmlUnosOceneDiv += "</div>";
                    htmlUnosOceneDiv += "<div class='col-md-4'>";
                    htmlUnosOceneDiv += "<textarea id='OpisOcene' class='form-control'></textarea>";
                    htmlUnosOceneDiv += "</div>";

                    $("#UnosOceneDiv").append(htmlUnosOceneDiv);
                    $("#TipOpisneOcene option").first().prop("hidden", true);

                }



            }

            //Metoda popunjava combobox vrednostima u zavisnosti od tipa ocene
            function PopuniOcene() {
                var tipOcene = $("#TipOcene option:selected").text();

                if (tipOcene == "Kontrolni" || tipOcene == "Pismeni" || tipOcene == "Usmeni" || tipOcene == "Zakljucna") {
                    $("#divOcene").html("");
                    $("#tipOceneGreska").html("");

                    var htmlSelectOcene = "";

                    htmlSelectOcene = "<select class='form-control' id='Ocena' onchange='ProveraOcene()'>";
                    htmlSelectOcene += "<option value='0'>Izaberite</option>";
                    htmlSelectOcene += "<option value='1'>1</option>";
                    htmlSelectOcene += "<option value='2'>2</option>";
                    htmlSelectOcene += "<option value='3'>3</option>";
                    htmlSelectOcene += "<option value='4'>4</option>";
                    htmlSelectOcene += "<option value='5'>5</option>";
                    htmlSelectOcene += "</select>";
                    htmlSelectOcene +=" <span class='field-validation-valid text-danger' id='ocenaGreska'></span>";

                    $("#divOcene").append(htmlSelectOcene);
                    $("#Ocena option").first().prop("hidden", true);


                }
                else if (tipOcene == "Domaci") {
                    $("#tipOceneGreska").html("");

                    $("#divOcene").html("");

                    var htmlSelectOcene = "";

                    htmlSelectOcene = "<select class='form-control' id='Ocena' onchange='ProveraOcene()'>";
                    htmlSelectOcene += "<option value='0'>Izaberite</option>";
                    htmlSelectOcene += "<option value='true'>Plus</option>";
                    htmlSelectOcene += "<option value='false'>Minus</option>";
                    htmlSelectOcene += "</select>";
                    htmlSelectOcene +=" <span class='field-validation-valid text-danger' id='ocenaGreska'></span>";

                    $("#divOcene").append(htmlSelectOcene);
                    $("#Ocena option").first().prop("hidden", true);

                }
                else if ($("#TipOcene").val() == 0) {
                    $("#tipOceneGreska").html("");
                    $("#divOcene").html("");

                    var htmlSelectOcene = "";

                    htmlSelectOcene = "<select class='form-control' disabled='disabled' id='Ocena'></select>";

                    $("#divOcene").append(htmlSelectOcene);

                }
            }

            //Metoda brise gresku iz span elemnta ukoliko je uslov ispunjen
            function ProveraOpisneOcene()
            {
                if($("#TipOpisneOcene").val()>0)
                {
                    $("#tipOpisneOceneGreska").html("");
                }

            }


            //Metoda brise gresku iz span elemnta ukoliko je uslov ispunjen
            function ProveraOcene()
            {
                if($("#Ocena").val()>0 || $("#Ocena").val()=='true' || $("#Ocena").val()=='false')
                {
                    $("#ocenaGreska").html("");
                }
            }

            //Metoda vrši unos ocene prema tipu predmeta i prema tipu ocene
            function UnosOcene()
            {
                var dtoOcenaUnos=null;

                if(ID>0)
                {
                    if(ocena=="Brojcana")
                    {
                        var oznaka = $("#Ocena").val();
                        var tipOcene = $("#TipOcene").val();

                        if (oznaka != 0 && tipOcene!=0)
                        {

                            var tipOceneTxt = $("#TipOcene option:selected").text();
                            if (ocena == "Brojcana" && (tipOceneTxt == "Kontrolni" || tipOceneTxt == "Pismeni" || tipOceneTxt == "Usmeni" || tipOceneTxt == "Zakljucna") && (oznaka == 1 || oznaka == 2 || oznaka == 3 || oznaka == 4 || oznaka == 5))
                            {

                                dtoOcenaUnos = {
                                    Oznaka:oznaka,
                                    UcenikId:ID,
                                    CasId:cas,
                                    TipOceneId: $("#TipOcene").val(),
                                    Napomena: $("#OpisOcene").val()

                                };


                            }
                            else if (ocena == "Brojcana" && (oznaka == "true" || oznaka == "false") && (tipOceneTxt == "Domaci"))
                            {

                                dtoOcenaUnos = {
                                    Plus: oznaka,
                                    UcenikId: ID,
                                    CasId: cas,
                                    TipOceneId: $("#TipOcene").val(),
                                    Napomena: $("#OpisOcene").val()

                                };
                            }
                        }
                        else if(tipOcene==0)
                        {
                            $("#tipOceneGreska").html("");
                            $("#tipOceneGreska").append("Izaberite tip ocene");
                        }
                        else if(oznaka==0)
                        {
                            $("#ocenaGreska").html("");
                            $("#ocenaGreska").append("Izaberite ocenu");

                        }
                    }
                    else if (ocena == "Opisna")
                    {
                        var idZakljucneOcene=0;

                        //ajax koji vraca id zakljucne ocene 
                        $.ajax({
                            type:"POST",
                            url:"/Ocene/VratiZakljucnuOcenu",
                            datatype: "json",
                            contentType: "application/json",
                            async: false,
                            success: function(id){

                                idZakljucneOcene=id;
                            },
                            error: function(){
                                swal({
                                    confirmButtonColor: '#d9534f',
                                    type:'error',
                                    title:'Ups!',
                                    text:'Došlo je do greške!'
                                });
                            }
                        })

                        if($("#TipOpisneOcene").val() != 0 && idZakljucneOcene!=0)
                        {
                            dtoOcenaUnos = {
                                UcenikId: ID,
                                CasId: cas,
                                TipOceneId:idZakljucneOcene,
                                TipOpisneOceneId: $("#TipOpisneOcene").val(),
                                Napomena: $("#OpisOcene").val()

                            };
                        }
                        else
                        {
                            $("#tipOpisneOceneGreska").html("");
                            $("#tipOpisneOceneGreska").append("Izaberite opisnu ocenu");
                        }
                    }


                    //Preuzimanje AntiForgeryToken-a sa forme
                    var form = $('#__AjaxAntiForgeryFormUnosOcene');
                    var token = $('input[name="__RequestVerificationToken"]', form).val();

                    var headers = {};
                    headers["__RequestVerificationToken"] = token;

                    if (dtoOcenaUnos != null)
                    {

                        $.ajax({
                            type: "POST",
                            headers: headers,
                            data: JSON.stringify(dtoOcenaUnos),
                            url: "/Casovi/UpisiOcenu",
                            datatype: "json",
                            contentType: "application/json",
                            async: false,
                            success:
                                    function (dtoOcena) {
                                        if(dtoOcena.OcenaId!=0)
                                        {
                                            sveOcene[sveOcene.length]=dtoOcena;

                                            swal({
                                                confirmButtonColor: '#8ad919',
                                                type:'success',
                                                title:'Uspeh!',
                                                text:'Ocena je uspešno upisana!'
                                            });

                                            $("#unosOceneModal").modal('hide');
                                            prikaziOcenePopUp(ID);
                                        }
                                        else
                                        {
                                            swal({
                                                confirmButtonColor: '#d9534f',
                                                type:'error',
                                                title:'Ups!',
                                                text:'Došlo je do greške!'
                                            });
                                        }
                                    }
                        });
                    }
                }


            }

            //Metoda poziva metodu za prikaz ocena za učenika
            function prikaziOcene()
            {
                if(ID>0)
                {
                    prikaziOcenePopUp(ID);
                }
            }


            var ucenikIdZaNapomenu=0;
            var casIdZaNapomenu=0;
            var napomenaId=0;

            //funckcija koja sluzi za unos ili azuriranje napomene odredjenog ucenika
            function SacuvajNapomenu(){

                var profesorId=@Html.Raw(Json.Encode(Model.Cas.ProfesorId));

                if(ucenikIdZaNapomenu>0 && casIdZaNapomenu>0 && profesorId>0)
                {
                    var dtoNapomena = {
                        NapomenaId: napomenaId,
                        Opis: $("#tekstNapomene").val(),
                        ProfesorId: profesorId,
                        CasId: casIdZaNapomenu,
                        UcenikId: ucenikIdZaNapomenu

                    };

                    //Preuzimanje AntiForgeryToken-a sa forme
                    var form = $('#__AjaxAntiForgeryFormUnosNapomene');
                    var token = $('input[name="__RequestVerificationToken"]', form).val();

                    var headers = {};
                    headers["__RequestVerificationToken"] = token;

                    //Poziva se metoda "DodajIliIzmeniNapomenu()" u kontroleru "Napomene"
                    $.ajax({
                        type: "POST",
                        headers: headers,
                        data: JSON.stringify(dtoNapomena),
                        url: "/Napomene/DodajIliIzmeniNapomenu",
                        datatype: "json",
                        contentType: "application/json"
                    }).done(function () {
                        alert("Uspešno sačuvano!");
                    });

                }
            }

            //sluzi za prikaz modala napomene gde ce se uneti ili azurirati napomena odredjenog ucenika
            function PrikaziNapomenu(ucenikId){
                $("#napomenaModal").modal();
                var casId=@Html.Raw(Json.Encode(Model.Cas.CasId));
                $("#tekstNapomene").html("");
                if(ucenikId > 0 && casId > 0)
                {
                    ucenikIdZaNapomenu=ucenikId;
                    casIdZaNapomenu=casId;

                    $.ajax({
                        type: "POST",
                        url: "/Napomene/VratiNapomenu?ucenikId=" + ucenikId + "&casId=" + casId,
                        contentType: "application/json",
                        datatype: "json",
                        async: false,
                        success:
                            function (napomena) {
                                $("#tekstNapomene").val(napomena.Opis);
                                napomenaId=napomena.NapomenaId;
                            }
                    });
                }
            }

            //funkcija koja služi za prikaz popup-a za unos napomene
            function showPopUpNapomena(ucenikId) {

                $("#popUpNapomena").dialog({

                    height: 400,
                    width: 500,
                    modal: true,
                    open: function () {

                        var casId = $("#casId").val();
                        var napomenaId = 0;
                        var opis;

                        //Poziva se metoda "VratiNapomenu()" u kontroleru "Napomene"
                        $.ajax({
                            type: "POST",
                            url: "/Napomene/VratiNapomenu?ucenikId=" + ucenikId + "&casId=" + casId,
                            contentType: "application/json",
                            datatype: "json",
                            async: false,
                            success:
                                function (napomena) {

                                    opis = napomena.Opis;
                                    napomenaId = napomena.NapomenaId;
                                }
                        });

                        $(this).find("#napomenaId").val(napomenaId);
                        $(this).find("#tekstNapomene").val(opis);
                    },

                    buttons: {
                        //Dugme koje služi za unos ili ažuriranje napomene u bazi
                        //(u zavisnosti da li već postoji u bazi)
                        "Sačuvaj": function () {

                            var dtoNapomena = {
                                NapomenaId: $(this).find("#napomenaId").val(),
                                Opis: $(this).find("#tekstNapomene").val(),
                                ProfesorId: $("#profesorId").val(),
                                CasId: $("#casId").val(),
                                UcenikId: ucenikId

                            };

                            //Preuzimanje AntiForgeryToken-a sa forme
                            var form = $('#__AjaxAntiForgeryForm');
                            var token = $('input[name="__RequestVerificationToken"]', form).val();

                            var headers = {};
                            headers["__RequestVerificationToken"] = token;

                            //Poziva se metoda "DodajIliIzmeniNapomenu()" u kontroleru "Napomene"
                            $.ajax({
                                type: "POST",
                                headers: headers,
                                data: JSON.stringify(dtoNapomena),
                                url: "/Napomene/DodajIliIzmeniNapomenu",
                                datatype: "json",
                                contentType: "application/json"
                            }).done(function () {
                                alert("Uspešno sačuvano!");
                            });

                            $(this).find("#tekstNapomene").val("");
                            $(this).find("#napomenaId").val(0);
                            $(this).dialog("close");

                        },

                        //Dugme služi da se popup za unos napomene zatvori.
                        "Otkaži": function () {
                            $(this).find("#tekstNapomene").val("");
                            $(this).find("#napomenaId").val(0);
                            $(this).dialog("close");
                        }
                    }
                });


            }

            //**Aca kraj**//



            function klikUcenikKartica(elem) {
                var klasa = $(elem).attr("class").split(' ')[1];
                //return   "<div class='col-md-3'><div class='ucenik-kartica'><img src='" + fotografija + "' class='ucenik-slika' style='width:140px;height:176px;' /><div class='ucenik-ime'>" + ime + " " + prezime + " </div></div></div>";

                return '<div class="col-sm-6 col-md-3 "><div class="evidencijaKartica" id="' + id + 'div"><div id="circle"><input type="hidden" value=' + id + ' id="primarni"><img src=' + fotografija + ' alt="evidencijaucenik" style="width:100%" id="img_pregled" /></div><div class="container_pregled_ucenika"><h4>' + ime + '</h4><p class="evidencijatitle">' + brojudnevniku + '.</p><div id="pbutton"><a id="' + id + 'button" class="evidencijabutton" value="' + id + '" onclick="klik(' + id + ')"><span id="' + id + 'glyph" class="glyphicon glyphicon-ok"></span></a></div></div></div></div>';

            }

            // id od korisnika je koriscen u kombinaciji sa div-om, button-om i glyph-om
            //kako bi svaki imao poseban id(zbog vise ucenika)
            // primer za id od diva kod ucenika koji ima id=5 je 5div

            function klik(id) {
                $('#' + id + 'div').toggleClass("borderevidencijacolor");
                $("#" + id + 'button').toggleClass("buttonevidencijacolor");
                $('#' + id + 'glyph').toggleClass('glyphicon-ok glyphicon-remove');
                var element = document.getElementById("primarni");

            }
            function klikUcenikKartica(elem) {
                var klasa = $(elem).attr("class").split(' ')[1];

                if (klasa == 'karticaUcenik-prisutan') {
                    $(elem).removeClass('karticaUcenik-prisutan')
                    $(elem).addClass('karticaUcenik-odsutan')

                    $('.evidencijaKartica').toggleClass("borderevidencijacolor");
                    $('#evidencijabutton').toggleClass("buttonevidencijacolor");
                }
                else {

                    $(elem).removeClass('karticaUcenik-odsutan')
                    $(elem).addClass('karticaUcenik-prisutan')
                    $('.evidencijaKartica').toggleClass("borderevidencijacolor");
                    $('#evidencijabutton').toggleClass("buttonevidencijacolor");
                }
            }

            function Ucenici() {
                var razred = $("#razred").val();
                var odeljenje = $("#odeljenja").val();

                if (odeljenje == undefined)
                    odeljenje = 1;

                var zahtev = $.getJSON("/Odeljenje/OdeljenjeUcenici?razred=" + razred + "&oznakaOdeljenja=" + odeljenje + '&status=3');

                zahtev.done(function (podaci) {

                    if (podaci.Ucenici == null) {
                        $("#ucenici").append('<div class="alert alert-warning" role="alert"><strong>Upozorenje!</strong> Nema učenika u izabranom odeljenju </div>');
                        return;
                    }

                    for (var ucenik in podaci.Ucenici) {
                        $("#ucenici").append(GenerisiKarticuUcenika(podaci.Ucenici[ucenik].ID, podaci.Ucenici[ucenik].Ime, podaci.Ucenici[ucenik].Prezime, podaci.Ucenici[ucenik].Fotografija, podaci.Ucenici[ucenik].BrojUDnevniku, podaci.Ucenici[ucenik].Prisutan));

                        //poziva dogadjaj klik ukoliko ucenik nije prisutan kako bi u prikazu
                        // prisustvo ucenika bilo crveno(x)
                        if (!podaci.Ucenici[ucenik].Prisutan) {
                            klik(podaci.Ucenici[ucenik].ID);
                        }
                    }


                });
                zahtev.fail(function (gr) { $("#p1").html(gr.statusText); });
            }

            function UpisiOdsutne() {

                var lista = [];

                //ucenicima koji su odsutni se stavlja klasa "buttonevidencijacolor" na button
                // prolazimo kroz listu tih buttona i uzimamo njihov atribut "value" u koji je smesten id od ucenika
                // niz tih id-eva smestamo u listu
                $(".buttonevidencijacolor").each(function (index) {
                    var id = $(this).attr('value');
                    lista.push(id);
                });


                var zahtev = $.ajax({
                    type: "POST",
                    data: JSON.stringify(lista),
                    //datatype:"text",
                    url: "/Odeljenje/UpisiOdsutne",
                    contentType: "application/json"
                }).done(function () {

                });
            }

            $(function () {

                $("#razred").change(function () {
                    $("#odeljenja").html("");
                    $('#odeljenja').change();  //Okidanje dogadjaja za promenu drop down-a za izbor odeljenja prilikom promene razreda.
                    Odeljenja();
                }).change();


                $('#odeljenja').change(function () {
                    $("#ucenici").html("");
                    $("#dugme").html("");
                    Ucenici();
                    // RedniBrojCasa();
                }).change();


            });

            //sluzi da postavi combobox na vrednost casa koji trenutno treba da se odrzi
            // primer: ako je prethodni cas koji je odrzan bio 2. po redu, u combobox-u se prikazuje broj 3
            function RedniBrojCasa() {
                var razred = $("#razred").val();
                var odeljenje = $("#odeljenja").val();
                if (odeljenje == undefined)
                    odeljenje = 1;

                var zahtev = $.getJSON("/Odeljenje/RedniBrojCasa?odeljenje=" + odeljenje + "&razred=" + razred);

                $.ajax({
                    method: "GET",
                    url: "/Odeljenje/RedniBrojCasa?odeljenje=" + odeljenje + "&razred=" + razred,
                    success: function (data) {
                        $("#rbCas").val(data);
                        console.log(data);
                    }
                });


            }


        </script>

    }
                                                }
