@model eDnevnikDev.Models.Cas

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cas</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-5">
                @Html.LabelFor(model => model.Datum, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <h3>@DateTime.Today.Date.ToString("dd/MM/yyyy")</h3>
                </div>
            </div>
        </div>
        <h3 id="porukaCas"></h3>
        <h3 id="porukaPredmet"></h3>
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-6">
                        <label for="razred">Razred</label>
                        <select id="razred" name="Razred" class="form-control">
                            <option value="1">Prvi</option>
                            <option value="2">Drugi</option>
                            <option value="3">Treći</option>
                            <option value="4">Četvrti</option>
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label for="odeljenja">Odeljenje</label>
                        <select id="odeljenja" name="Odeljenje" class="form-control"></select>
                    </div><br />
                </div>
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.Naziv, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Naziv, new { htmlAttributes = new { @class = "form-control", @name = "Naziv" } })
                @Html.ValidationMessageFor(model => model.Naziv, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Opis, new { htmlAttributes = new { @class = "form-control", @name = "Opis" } })
                @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PredmetId, "Predmet", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("PredmetId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PredmetId, "", new { @class = "text-danger" })*@

                <select id="predmeti" name="PredmetId" class="form-control"></select>
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2">Redni broj časa</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.RedniBrojCasa, new { htmlAttributes = new { @class = "form-control", @id = "rbCas", @name = "RedniBrojCasa", @onblur = "ProveraPostojanjaRednogBrojaCasa()" } })
                @Html.ValidationMessageFor(model => model.RedniBrojCasa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Redni broj predmeta</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.RedniBrojPredmeta, new { htmlAttributes = new { @class = "form-control", @id = "rbPredmet", @name = "RedniBrojPredmeta", @onblur = "ProveraPostojanjaRednogBrojaPredmeta()" } })
                @Html.ValidationMessageFor(model => model.RedniBrojPredmeta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="potvrdi" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@section Scripts{
@Scripts.Render("~/bundles/jqueryval")
    <script>
        function Odeljenja() {
            var razred = $("#razred").val();
            var zahtev = $.getJSON("/Odeljenje/OdeljenjeTrajanje?godina=" + razred);


            zahtev.done(function (odeljenja) {

                for (var odeljenje in odeljenja) {
                    $("#odeljenja").append("<option value='" + odeljenja[odeljenje].Oznaka + "'>" + odeljenja[odeljenje].Oznaka + "</option>");
                }
            });
            zahtev.fail(function (gr) { $("#p1").html(gr.statusText); });
        }

        function Predmeti(razred, odeljenje)
        {
            var zahtev = $.getJSON("/Casovi/VratiPredmete?razred=" + razred + "&odeljenje=" + odeljenje);

            zahtev.done(function (predmeti) {

                if (predmeti != "") {
                    $("#predmeti").html("");
                    for (var predmet in predmeti) {
                        $("#predmeti").append("<option value='" + predmeti[predmet].PredmetID + "'>" + predmeti[predmet].NazivPredmeta + "</option>");
                    }
                }
                else {
                    $("#predmeti").html("");
                    $("#predmeti").append("<option value='0'>Nema predmeta</option>");
                }

            });

            zahtev.fail(function (greska) {
                alert("Greska");
            });
        }

        $(function () {

            $("#razred").change(function () {
                $("#odeljenja").html("");
                $('#odeljenja').change();  //Okidanje dogadjaja za promenu drop down-a za izbor odeljenja prilikom promene razreda.
                Odeljenja();
            }).change();


            $('#odeljenja').change(function () {
                var razred = $("#razred").val();
                var odeljenje = null;
                odeljenje = $("#odeljenja").val();
                if (odeljenje == null) {
                    odeljenje = 1;
                    razred = 1;
                }
                Predmeti(razred, odeljenje);
                RedniBrojCasa();
                RedniBrojPredmeta();
            }).change();

            $("#predmeti").change(function () {

                RedniBrojPredmeta();
            }).change();
        });


        //sluzi da postavi combobox na vrednost casa koji trenutno treba da se odrzi
        // primer: ako je prethodni cas koji je odrzan bio 2. po redu, u combobox-u se prikazuje broj 3
        function RedniBrojCasa() {
            var razred = $("#razred").val();
            var odeljenje = $("#odeljenja").val();
            if (odeljenje == undefined)
                odeljenje = 1;

            //var zahtev = $.getJSON("/Odeljenje/RedniBrojCasa?odeljenje=" + odeljenje + "&razred=" + razred);


            //poziva metoda "RedniBrojCasa(int odeljenje, int razred)"
            //u kontroleru "Odeljenje"
            $.ajax({
                method: "GET",
                url: "/Odeljenje/RedniBrojCasa?odeljenje=" + odeljenje + "&razred=" + razred,
                success: function (data) {
                    if (data != "") {
                        $("#poruka").html("");
                        $("#rbCas").val(data);
                    }
                    else {
                        $("#poruka").html("Ne postoji odeljenje");
                        $("#rbCas").val(null);
                    }
                    console.log(data);
                }
            });
        }

        function RedniBrojPredmeta() {

            var razred = $("#razred").val();
            var odeljenje = $("#odeljenja").val();
            var predmetId=$("#predmeti").val();

            if (odeljenje == undefined)
                odeljenje = 1;

            //var zahtev = $.getJSON("/Casovi/VratiRedniBrojPredmeta?razred" + razred + "&odeljenje=" + odeljenje + "&predmetId=" + predmetId);

            $.ajax({
                method: "GET",
                url: "/Casovi/VratiRedniBrojPredmeta?razred=" + razred + "&odeljenje=" + odeljenje + "&predmetId=" + predmetId,
                success: function (data) {
                    if (data > -1) {
                        $("#porukaCas").html("");
                        $("#rbPredmet").val(data);
                    }
                    else {
                        $("#porukaCas").html("Ne postoji odeljenje");
                        $("#rbPredmet").val(null);
                    }
                    console.log(data);
                }
            });
        }

        function ProveraPostojanjaRednogBrojaCasa()
        {
            var razred = $("#razred").val();
            var odeljenje = $("#odeljenja").val();
            var redniBrojCasa = $("#rbCas").val();

            if (odeljenje == undefined)
                odeljenje = 1;

            //var zahtev = $.getJSON("/Casovi/VratiRedniBrojPredmeta?razred" + razred + "&odeljenje=" + odeljenje + "&predmetId=" + predmetId);

            $.ajax({
                method: "GET",
                url: "/Casovi/ProveraPostojanjaRednogBrojaCasa?razred=" + razred + "&odeljenje=" + odeljenje +  "&redniBrojCasa=" + redniBrojCasa,
                success: function (data) {
                    if (data > 0) {
                        $("#porukaCas").html("");
                        $("#potvrdi").removeAttr("disabled");
                    }
                    else {
                        $("#porukaCas").html("Čas je već upisan!");
                        $("#potvrdi").attr("disabled", "disabled");
                    }
                    console.log(data);
                }
            });
        }

        function ProveraPostojanjaRednogBrojaPredmeta() {
            var razred = $("#razred").val();
            var odeljenje = $("#odeljenja").val();
            var predmetId = $("#predmeti").val();
            var rbPredmeta = $("#rbPredmet").val()

            if (odeljenje == undefined)
                odeljenje = 1;

            //var zahtev = $.getJSON("/Casovi/VratiRedniBrojPredmeta?razred" + razred + "&odeljenje=" + odeljenje + "&predmetId=" + predmetId);

            $.ajax({
                method: "GET",
                url: "/Casovi/ProveraPostojanjaRednogBrojaPredmeta?razred=" + razred + "&odeljenje=" + odeljenje + "&predmetId=" + predmetId + "&rbPredmeta=" + rbPredmeta,
                success: function (data) {
                    if (data > 0) {
                        $("#porukaPredmet").html("");
                        $("#potvrdi").removeAttr("disabled");
                    }
                    else {
                        $("#porukaPredmet").html("Predmet pod tim brojem je već upisan!");
                        $("#potvrdi").attr("disabled", "disabled");
                    }
                    console.log(data);
                }
            });
        }


    </script>
}